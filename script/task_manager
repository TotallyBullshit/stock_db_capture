#!/usr/bin/env ruby
# Copyright Â© Kevin P. Nolan 2009 All Rights Reserved.

require 'rubygems'
require 'optparse'
require 'ostruct'
require 'daemons'

root_path_ary = File.expand_path(File.dirname(__FILE__)).split('/') + ['..']
root_dir = File.expand_path(File.join(root_path_ary))

def create_task_proc(root_dir, config_file, process_index)
  lambda do
    require File.join(root_dir,'config/mini-environment')
    Task::Base.run(config_file, process_index)
  end
end

valid_cmds = [:start, :stop, :status,:zap].map(&:to_s)

options = OpenStruct.new
optparse = OptionParser.new do |opts|
  opts.banner = "Usage task_manager [start|stop|status|zap] options"

  opts.on('-C', '--config FILE', String, "The task config file") do |config_file|
    options.config_file = config_file
  end

  options.server_count = 1
  opts.on('-s', '--servers NUMBER', Integer, "Fork NUMBER of task servers") do |s|
    options.server_count = s
  end

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end
end

puts "invalid command #{ARGV[0]} should be one of #{valid_cmds.join(', ')}" unless valid_cmds.include? ARGV[0]

optparse.parse!

if ARGV[0] == 'start'
  unless options.config_file
    puts 'config file is MANDITORY!'
  else
    puts "Running #{options.server_count} processes"
    dopts_options = {
      :app_name => 'task_manager',
      :dir_mode => :normal,
      :dir => File.join(root_dir, 'pids'),
      :multiple => true,
      :ontop => false,
      :backtrace => true,
      :mode => :proc,
      :log_output => true
    }
    options.server_count.times do |i|
      proc = create_task_proc(root_dir, options.config_file, i)
      Daemons.call(dopts_options, &proc)
      puts 'after call to Daemons'
    end
  end
else
  puts 'only start command support so far'
end

# Local Variables:
# mode:ruby
# End:
