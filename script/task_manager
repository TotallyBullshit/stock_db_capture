#!/usr/bin/env ruby
# Copyright Â© Kevin P. Nolan 2009 All Rights Reserved.

require 'rubygems'                                             #1.8.7
require 'optparse'
require 'ostruct'
require 'daemons'

def add_to_load_path(*args)
  root = File.expand_path('..')
  args.each { |dir| $:.unshift(File.join(root, dir)) }
end

add_to_load_path('lib', 'lib/task' , 'lib/task/config/compile', 'lib/task/config/config_files', 'app/models')

root_path_ary = File.expand_path(File.dirname(__FILE__)).split('/') + ['..']
root_dir = File.expand_path(File.join(root_path_ary))

dd_index = ARGV.index('--')
my_options = dd_index ? ARGV[dd_index+1..-1] : []       # Extract options after --
daemon_opts = ARGV[0..(dd_index ? dd_index-1 : -1)]     # Extract options before -- or EOS

options = OpenStruct.new
optparse = OptionParser.new do |opts|
  opts.default_argv = my_options
  opts.banner = "Usage task_manager daemon_args -- options"

  options.config_file = ''
  opts.on('-C', '--config FILE', String, "The task config file") do |config_file|
    options.config_file = config_file
  end

  options.server_count = 1
  opts.on('-s', '--servers NUMBER', Integer, "Run NUMBER of task servers. A value > 1 forks children and 0 doesn't daemonize") do |s|
    options.server_count = s
  end

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
  end
end

optparse.parse!

# Don't bother parsing task_manager specific options (ones after  --) if help or version number only requested for Daemons
if daemon_opts.find_index { |el| el == '-h' || el == '--help' || el == '--version' }
  Daemons.run_proc('task_manager', { })
elsif daemon_opts.index { |el| el == 'start' || el == 'run' } && options.config_file.length.zero?
  puts 'config file is MANDITORY!'
elsif options.server_count < 1
  puts 'number of servers much be > 0'
else
  daemon_options = {
    :dir_mode => :normal,
    :dir => File.join(root_dir, 'pids'),
    :multiple => false,
    :backtrace => true,
    :log_output => true
  }
  # Only way you can use the debugger
  if options.server_count == 1
    require File.join(root_dir,'config/mini-environment')
    require 'beansync'
    Task::Base.run(options.config_file, 1)
  else
    Daemons.run_proc('task_manager', daemon_options) do
      require File.join(root_dir,'config/mini-environment')
      require 'beansync'
      Task::Base.run(options.config_file, options.server_count)
    end
  end
end

# Local Variables:
# mode:ruby
# End:
