#!/usr/bin/env ruby
# Copyright Â© Kevin P. Nolan 2009 All Rights Reserved.

require '../config/micro-environment'
require 'daemons'
require 'thread'
require 'drb'
require 'ostruct'
require 'remote_logger_factory'

my_options = ARGV.inject([]) { |ary, el| ary << el if el == '--' || !ary.empty?; ary }.drop(1)

options = OpenStruct.new

if my_options.empty?
  options.uri = 'druby://localhost:9999'
end

optparse = OptionParser.new do |opts|
  opts.default_argv = my_options
  opts.banner = "Usage remote_logger cmd flags -- [options]"

  options.uri = 'druby://localhost:9999'
  opts.on('-U', '--uri STRING', String, "URI to which the server wiill be bound TCP address:port can be used or Unix Socket with the prefix drbunix:<filename> otherwise it defaults to druby://localhost:9999, a TCP socket") do |uri|
    options.uri = uri
  end
end

begin
  optparse.parse!
rescue Exception => e
  $stderr.puts "#{e.class}: #{e.to_s}"
  exit
end

pid_dir_path = File.join(RAILS_ROOT, 'pids')

daemon_options = {
  :app_name => 'remote_logger',
  :dir_mode => :normal,
  :dir => pid_dir_path,
  :multiple => false,
  :backtrace => true,
  :monitor => false
}

Daemons.run_proc('remote_logger', daemon_options) {
  Signal.trap("TERM") do
    logger_factory = DRb.front()
    DRb.stop_service()
    logger_factory.close_all()
  end
  logger_factory = Server::RemoteLoggerFactory.new()
  DRb.start_service(options.uri, logger_factory)
  DRb.thread.join
}

# Local Variables:
# mode:ruby
# End:
